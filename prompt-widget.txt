#supabase #brave-search
Rules:
+ For the frontend components if use shadcn component then download it in terminal.
+ When import, always check the path to make sure the import is correct. 
+ Before moving on to another file, you have to make sure the current file is error-free/.
+ Do not make any unneccesary files and folders.
+ Do not run npm run dev and npm run build to check for errors.

Implement remaining task of task 3.2 and task 3.3 (when click chats in the dashboard from admin-dashboard folder). Read the task in TASKS.md, the current implementation of the widget in task 3.1 and 3.2 in the chat-widget folder and chat-widget/README.md, task 3.3 recommendation in docs/chat-widget-n8n-integration.md so you can apply the widget in your implementation if neccesary.

Use supabase MCP to read the current schema and RLS policies so you can implement appropriately.

Use brave MCP so you can fetch the latest documentation before every coding to avoid deprication.

After you implement the admin chat management interface, apply RBAC for roles like Chatbot Manager, Analyst/Reporter and Support Agent so they can only access functionality corresponding to their roles described in Chatbot_DoanhNghiep.md

** Later
Rules:
+ Check the ui/components for the shadcn components. If you want another components then instlal it using shadcn not shadcn/ui.
+ When import, always check the path to make sure the import is correct. 
+ Before moving on to another file, you have to make sure the current file is error-free.
+ Do not make any unneccesary files and folders.
+ Do not run npm run dev and npm run build to check for errors.
---
In the current dashboard layout.tsx there is the options titled Documents. Now i want to replace this with Chatbots for creating, managing and deleting chatbots. The page implemetation will be done in the chatbots folder and integrated the chatbot widget from the chat-widgets folder.
+ This page is only for super admin and chatbot manager so remember to do RBAC. You can reference the RBAC from the chats folder.
+ A chatbot can has the styling, position, knowledge base,... that is listed from the chat-widget README.md configured. Read it and provide an interface to set these parameters when create the chatbot. The default for supabase and n8n related parameter should be set to our current env.local, use the name not the direct api values.
+ The integrated chat widget should work exactly like when i run the chat-widget folder on localhost:3001 to chat using the widget.

Later:
+ How to get the iframe code for embedding. Should have a button to copy the code.
+ Add a preview page to test the iframe 

